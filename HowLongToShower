function round(num, dec)
    if num == 0 then
        return 0
    else
        local mult = 10^(dec or 0)
        return math.floor(num * mult + 0.5) / mult
    end end function UpdateDev(device,nvalue,svalues)
    commandArray[#commandArray+1] = {['UpdateDevice'] = 
otherdevices_idx[device]..'|'..tostring(nvalue)..'|'..tostring(svalues)} end commandArray = {} time = 
os.date("*t")
    
    if ((time.min+2)%5)==0 then
        local t_delta = 0
        -- run every min
        -- current temp. water 9 bla bla jper kg. assume 30% of a tank and linear. At 40 you can shower. The 
element is half way down the tank.
        local c_delta = 40 - otherdevices['ShowerT'] -- how much to heat to gain
        if (c_delta <= 0 ) then
            t_delta = 0 -- no time like the present
        else
            t_delta = c_delta / 0.5 -- convert to minutes. 15C to 60C takes 90 minutes.
        end
    
        -- commandArray['MinutesToShower']= 2 -- tostring(round(t_delta,0)) -- no point showing seconds as the 
amount of assumptions made above
        UpdateDev('MinutesToShower',0,round(t_delta,0))
        --print ("t_delta"..tostring(t_delta).." c_delta "..tostring(c_delta))
        
        --
        -- if no time is left then switch it off
        --
        if (t_delta == 0 ) then
            if (otherdevices['TriggerStopShower'] == 'Off' ) then
                commandArray['TriggerStopShower'] = 'On'
            end
        end end
    
return commandArray
